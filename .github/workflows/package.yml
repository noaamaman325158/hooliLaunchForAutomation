name: Build and Package React App
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source project
      uses: actions/checkout@v4
      
    - name: Checkout electron packaging project
      uses: actions/checkout@v4
      with:
        repository: noaamaman325158/hooliLaunchPackage  
        token: ${{ secrets.PAT_TOKEN }}
        path: electron-project
        lfs: true

    - name: Setup Git LFS
      working-directory: ./electron-project
      run: |
        git lfs install
        echo "*.exe filter=lfs diff=lfs merge=lfs -text" > .gitattributes
        echo "*.dll filter=lfs diff=lfs merge=lfs -text" >> .gitattributes
        git add .gitattributes
        git commit -m "Add Git LFS configuration" || echo "No changes to commit"
        git push || echo "No changes to push"

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: './ClientSide/client/package-lock.json'

    - name: Install Wine
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y wine64 wine32

    - name: Build React App
      working-directory: ./ClientSide/client
      run: |
        npm ci
        CI=false npm run build
        
    - name: Clear and Create electron build directory
      run: |
        rm -rf electron-project/build
        mkdir -p electron-project/build
      
    - name: Copy build files to electron project
      run: |
        cp -r ClientSide/client/build/* electron-project/build/

    - name: Update package.json for electron-builder
      working-directory: ./electron-project
      run: |
        node -e '
          const fs = require("fs");
          const pkg = JSON.parse(fs.readFileSync("package.json", "utf8"));
          pkg.description = pkg.description || "Hooli Launch Application";
          pkg.author = pkg.author || {
            "name": "Hooli Launch Team",
            "email": "your-email@example.com"
          };
          fs.writeFileSync("package.json", JSON.stringify(pkg, null, 2));
        '

    - name: Install electron-builder dependencies
      working-directory: ./electron-project
      run: |
        npm ci

    - name: Run electron-builder
      working-directory: ./electron-project
      run: |
        npx electron-builder --win --x64 --publish never

    - name: Track large files with Git LFS
      working-directory: ./electron-project
      run: |
        git lfs track "dist/**/*.exe"
        git lfs track "dist/**/*.dll"
        git add .gitattributes dist/
        git add build
        git status
        
    - name: Commit and push to electron project
      working-directory: ./electron-project
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add -A
        git commit -m "Update build files and electron package" || echo "No changes to commit"
        git push
